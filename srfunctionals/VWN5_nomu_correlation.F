C SOURCES:
C    S. H. Vosko, L. Wilk, and M. Nusair.
C    Accurate spin-dependent electron liquid correlation energies for local spin density calculations: a critical analysis.
C    Canadian Journal of Physics, 58(8):1200-1211, aug 1980.



C*****************************************************************************
      pure subroutine ESRC_VWN5(rho, Ea)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho
      real*8, intent(out) :: Ea
      real*8 :: x0, x1, x2
      Ea = 0.0d0
      x0 = 0.826307487110758d0*rho**(-0.166666666666667d0)
      x1 = 0.6203504908994d0*rho**(-0.333333333333333d0)
      x2 = 1d0/(3.5529372610885d0*x0 + x1 + 12.9352d0)
      Ea = 0.0310907d0*log(x1*x2) + 0.000969022771154437d0*log(x2*( 0.95
     &318429299693652d0*x0 + 0.10498d0)**2) + 0.038783294878113d0* atan(
     &6.1519908197590798d0/(1.906368585993873d0*x0 + 3.7274400000000001d
     &0))
      end subroutine


C*****************************************************************************
      pure subroutine D1ESRC_VWN5(rho, Ea, d1Ea)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho
      real*8, intent(out) :: Ea, d1Ea(4)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13
      Ea = 0.0d0
      d1Ea(:) = 0.0d0
      x0 = 0.826307487110758d0
      x1 = rho**(-0.166666666666667d0)*x0
      x2 = 1.90636858599387d0*x1 + 3.72744d0
      x3 = 0.682784063255296d0
      x4 = rho**0.333333333333333d0
      x5 = 0.90856029641607d0/x4
      x6 = x3*x5
      x7 = 1d0/(3.5529372610885d0*x1 + x6 + 12.9352d0)
      x8 = 0.953184292996937d0*x1 + 0.10498d0
      x9 = 0.0310907d0*log(x6*x7) + 0.000969022771154437d0*log(x7*x8**2)
     & + 0.038783294878113d0*atan(6.1519908197590798d0/x2)
      x10 = x2**(-2)
      x11 = rho**(-1.16666666666667d0)*x0
      x12 = 0.30285343213869d0*rho**(-1.33333333333333d0)
      x13 = x7*(0.592156210181417d0*x11 + x12*x3)
      Ea = x9
      d1Ea(1) = -rho*(-0.0758081683534927d0*x10*x11/(37.8469910464d0*x10
     & + 1.0d0) + 0.0342197431724027d0*x4*(x12 - x13*x5) + (0.0003078857
     &61673592d0* x11 - 0.000969022771154437d0*x13*x8)/x8) + x9
      end subroutine


C*****************************************************************************
      pure subroutine D2ESRC_VWN5(rho, Ea, d1Ea, d2Ea)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho
      real*8, intent(out) :: Ea, d1Ea(4), d2Ea(10)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x2
     &6, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37
      Ea = 0.0d0
      d1Ea(:) = 0.0d0
      d2Ea(:) = 0.0d0
      x0 = 0.826307487110758d0
      x1 = rho**(-0.166666666666667d0)*x0
      x2 = 1.90636858599387d0*x1 + 3.72744d0
      x3 = 0.682784063255296d0
      x4 = rho**0.333333333333333d0
      x5 = 0.90856029641607d0/x4
      x6 = x3*x5
      x7 = 3.5529372610885d0*x1 + x6 + 12.9352d0
      x8 = 1d0/x7
      x9 = 0.953184292996937d0*x1 + 0.10498d0
      x10 = x9**2
      x11 = x10*x8
      x12 = 0.000969022771154437d0*log(x11) + 0.0310907d0*log(x6*x8) + 0
     &.038783294878113d0*atan(6.1519908197590798d0/x2)
      x13 = rho**(-1.16666666666667d0)*x0
      x14 = x2**(-2)
      x15 = 37.8469910464d0*x14 + 1.0d0
      x16 = 1d0/x15
      x17 = x14*x16
      x18 = x13*x17
      x19 = rho**(-1.33333333333333d0)
      x20 = 0.30285343213869d0*x19
      x21 = 0.592156210181417d0*x13 + x20*x3
      x22 = x21*x8
      x23 = x20 - x22*x5
      x24 = 0.0342197431724027d0*x4
      x25 = x23*x24
      x26 = 1d0/x9
      x27 = 0.000307885761673592d0*x13
      x28 = x22*x9
      x29 = 0.000615771523347183d0*x13
      x30 = rho**(-2.33333333333333d0)*x3
      x31 = rho**(-2.16666666666667d0)*x0
      x32 = 1d0/x10
      x33 = 0.317728097665645d0*x13 - x28
      x34 = 0.40380457618492d0*rho**(-2.33333333333333d0)
      x35 = 0.60570686427738d0*x19
      x36 = x3*x34 + 0.69084891187832d0*x31
      x37 = x21*(1.18431242036283d0*x13 + x3*x35)/x7**2
      Ea = x12
      d1Ea(1) = -rho*(-0.0758081683534927d0*x18 + x25 + x26*(x27 - 0.000
     &969022771154437d0*x28)) + x12
      d2Ea(1) = rho*(-0.0114065810574676d0*rho**(-0.666666666666667d0)*x
     &23 + 0.0481727702369445d0*x16*x30/x2**3 - 0.0884428630790749d0*x17
     &*x31 + x22*x25 + 0.000969022771154437d0*x22*x26*x33 + x24*(-x22*x3
     &5 + x34 - x36*x5*x8 + x37*x5) - x27*x32*x33 + x32*( 0.000969022771
     &154437d0*x10*x37 - 0.000969022771154437d0*x11*x36 - x28*x29 + 4.89
     &119786774443d-5*x30 + 0.000359200055285857d0*x31*x9 ) - 1.82319440
     &383792d0*x30/(x15**2*x2**5)) + 0.151616336706985d0* x18 - 0.068439
     &4863448054d0*x23*x4 - x26*(-0.00193804554230887d0* x28 + x29)
      end subroutine


C*****************************************************************************
      pure subroutine ESRC_SPIN_VWN5(rho_a, rho_b, E)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_a, rho_b
      real*8, intent(out) :: E
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12
      E = 0.0d0
      x0 = rho_a - rho_b
      x1 = rho_a + rho_b
      x2 = x0/x1
      x3 = 1.92366105093154d0*(1.0d0 - x2)**1.33333333333333d0 + 1.92366
     &105093154d0 *(x2 + 1.0d0)**1.33333333333333d0 - 3.84732210186307d0
     &
      x4 = 0.6203504908994d0*x1**(-0.333333333333333d0)
      x5 = 0.826307487110758d0*x1**(-0.166666666666667d0)
      x6 = 1d0/(x4 + 6.72988144596143d0*x5 + 18.0578d0)
      x7 = 0.953184292996937d0*x5
      x8 = 1.90636858599387d0*x5
      x9 = 1d0/(x4 + 3.5529372610885d0*x5 + 12.9352d0)
      x10 = 0.0310907d0*log(x4*x9) + 0.000969022771154437d0*log(x9*(x7 +
     & 0.10498d0) **2) + 0.038783294878113d0*atan(6.1519908197590798d0/(
     &x8 + 3.7274400000000001d0))
      x11 = x0**4/x1**4
      x12 = 1d0/(x4 + 1.07811815828004d0*x5 + 13.0045d0)
      E = x10 - x11*x3*(x10 - 0.01554535d0*log(x4*x6) - 0.00224786709554
     &261d0*log( x6*(x7 + 0.32500000000000001d0)**2) - 0.052491393169780
     &9d0*atan( 4.7309269095601136d0/(x8 + 7.0604199999999997d0))) + 0.0
     &0987581566084038d0*x3*(x11 - 1.0d0)*(log(x12*x4) + 0.0004140337942
     &82063d0*log(x12*(x7 + 0.0047584000000000003d0)**2 ) + 0.3177080047
     &43941d0*atan(7.1231089178181177d0/(x8 + 1.13107d0 )))
      end subroutine


C*****************************************************************************
      pure subroutine D1ESRC_SPIN_VWN5(rho_a, rho_b, E, d1E)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_a, rho_b
      real*8, intent(out) :: E, d1E(9)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x2
     &6, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39
     &, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52,
     & x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63
      E = 0.0d0
      d1E(:) = 0.0d0
      x0 = 0.682784063255296d0
      x1 = rho_a + rho_b
      x2 = x1**0.333333333333333d0
      x3 = 0.90856029641607d0/x2
      x4 = x0*x3
      x5 = 0.826307487110758d0
      x6 = x1**(-0.166666666666667d0)*x5
      x7 = 1d0/(x4 + 6.72988144596143d0*x6 + 18.0578d0)
      x8 = 0.953184292996937d0*x6
      x9 = x8 + 0.325d0
      x10 = 1.90636858599387d0*x6
      x11 = x10 + 7.06042d0
      x12 = 1d0/(x4 + 3.5529372610885d0*x6 + 12.9352d0)
      x13 = x10 + 3.72744d0
      x14 = x8 + 0.10498d0
      x15 = 0.000969022771154437d0*log(x12*x14**2) + 0.0310907d0*log(x12
     &*x4) + 0.038783294878113d0*atan(6.1519908197590798d0/x13)
      x16 = x15 - 0.01554535d0*log(x4*x7) - 0.00224786709554261d0*log(x7
     &*x9**2) - 0.0524913931697809d0*atan(4.7309269095601136d0/x11)
      x17 = rho_a - rho_b
      x18 = 1d0/x1
      x19 = x17*x18
      x20 = x19 + 1.0d0
      x21 = x20**1.33333333333333d0
      x22 = 1.0d0 - x19
      x23 = 1.92366105093154d0*x21 + 1.92366105093154d0*x22**1.333333333
     &33333d0 - 3.84732210186307d0
      x24 = x1**(-4)
      x25 = x17**4
      x26 = x24*x25
      x27 = x23*x26
      x28 = 0.101321183642338d0
      x29 = x26 - 1.0d0
      x30 = x10 + 1.13107d0
      x31 = 1d0/(x4 + 1.07811815828004d0*x6 + 13.0045d0)
      x32 = x8 + 0.0047584d0
      x33 = 0.000414033794282063d0*log(x31*x32**2) + log(x31*x4) + 0.317
     &708004743941d0*atan(7.1231089178181177d0/x30)
      x34 = x28*x29*x33
      x35 = 0.0974703937105774d0*x23
      x36 = x15 - x16*x27 + x34*x35
      x37 = 4.0d0*x16*x23
      x38 = x17**3*x24
      x39 = x37*x38
      x40 = x25/x1**5
      x41 = x16*x40
      x42 = x22**0.333333333333333d0
      x43 = (2.56488140124205d0*x19 - 2.56488140124205d0)*(-x20**0.33333
     &3333333333d0 + x42)
      x44 = 0.38988157484231d0*x23*x28*x33*x38
      x45 = x18*x34
      x46 = 1d0/x14
      x47 = x1**(-1.16666666666667d0)*x5
      x48 = 0.000307885761673592d0*x47
      x49 = 0.30285343213869d0*x1**(-1.33333333333333d0)
      x50 = x0*x49
      x51 = x12*(0.592156210181417d0*x47 + x50)
      x52 = 0.000969022771154437d0*x14*x51
      x53 = x3*x51
      x54 = 0.0342197431724027d0*x2
      x55 = x13**(-2)
      x56 = 0.0758081683534927d0*x47*x55/(37.8469910464d0*x55 + 1.0d0)
      x57 = x11**(-2)
      x58 = -x49
      x59 = x7*(1.12164690766024d0*x47 + x50)
      x60 = x30**(-2)
      x61 = x31*(0.179686359713341d0*x47 + x50)
      x62 = x27*(-0.0171098715862014d0*x2*(x3*x59 + x58) + x46*(-x48 + x
     &52) - 0.0789023540332771d0*x47*x57/(22.3816694236d0*x57 + 1.0d0) +
     & x54* (x53 + x58) + x56 - (-0.000714210536071954d0*x47 + 0.0022478
     &6709554261d0*x59*x9)/x9) - x28*x29*x35*( -1.10064241629821d0*x2*(-
     &x3*x61 + x49) + 0.719040519881222d0*x47* x60/(50.7386806551d0*x60 
     &+ 1.0d0) - (-0.000414033794282063d0*x32* x61 + 0.00013155016982652
     &9d0*x47)/x32) - x37*x40 + x46*(x48 - x52 ) + x54*(x49 - x53) - x56
     &
      x63 = x20*x42 - x21
      E = x36
      d1E(1) = -x1*(x39 + x41*x43 - 0.0974703937105774d0*x43*x45 + x44*(
     &x19 - 1.0d0) + x62) + x36
      d1E(2) = -x1*(x20*x44 - x39 + 2.56488140124205d0*x41*x63 - 0.25d0*
     &x45*x63 + x62) + x36
      end subroutine


C*****************************************************************************
      pure subroutine D2ESRC_SPIN_VWN5(rho_a, rho_b, E, d1E, d2E)
C*****************************************************************************
C   Implemented by YingXing Cheng.
C
C   Subroutine generated using Sympy 1.4
C   Generated: January 12, 2022
C*****************************************************************************
      implicit none
      real*8, intent(in) :: rho_a, rho_b
      real*8, intent(out) :: E, d1E(9), d2E(45)
      real*8 :: x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x
     &13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x2
     &6, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39
     &, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52,
     & x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, 
     &x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x
     &79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x9
     &2, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104
     &, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115
     &, x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126
     &, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137
     &, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148
     &, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159
     &, x160, x161, x162, x163, x164, x165, x166, x167, x168, x169, x170
     &, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181
     &, x182, x183, x184, x185, x186, x187, x188, x189, x190, x191, x192
     &, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203
     &, x204, x205, x206, x207
      E = 0.0d0
      d1E(:) = 0.0d0
      d2E(:) = 0.0d0
      x0 = 0.682784063255296d0
      x1 = rho_a + rho_b
      x2 = x1**0.333333333333333d0
      x3 = 0.90856029641607d0/x2
      x4 = x0*x3
      x5 = 0.826307487110758d0
      x6 = x1**(-0.166666666666667d0)*x5
      x7 = x4 + 6.72988144596143d0*x6 + 18.0578d0
      x8 = 1d0/x7
      x9 = 0.01554535d0*log(x4*x8)
      x10 = 0.953184292996937d0*x6
      x11 = x10 + 0.325d0
      x12 = x11**2
      x13 = x12*x8
      x14 = 0.00224786709554261d0*log(x13)
      x15 = 1.90636858599387d0*x6
      x16 = x15 + 7.06042d0
      x17 = 0.0524913931697809d0*atan(4.7309269095601136d0/x16)
      x18 = x4 + 3.5529372610885d0*x6 + 12.9352d0
      x19 = 1d0/x18
      x20 = 0.0310907d0*log(x19*x4)
      x21 = x15 + 3.72744d0
      x22 = 0.038783294878113d0*atan(6.1519908197590798d0/x21)
      x23 = x10 + 0.10498d0
      x24 = x23**2
      x25 = x19*x24
      x26 = 0.000969022771154437d0*log(x25)
      x27 = x20 + x22 + x26
      x28 = -x14 - x17 + x27 - x9
      x29 = rho_a - rho_b
      x30 = 1d0/x1
      x31 = x29*x30
      x32 = x31 + 1.0d0
      x33 = x32**1.33333333333333d0
      x34 = 1.0d0 - x31
      x35 = x34**1.33333333333333d0
      x36 = 1.92366105093154d0*x33 + 1.92366105093154d0*x35 - 3.84732210
     &186307d0
      x37 = x1**(-4)
      x38 = x29**4
      x39 = x37*x38
      x40 = x36*x39
      x41 = 0.0974703937105774d0*x36
      x42 = x39 - 1.0d0
      x43 = 0.101321183642338d0
      x44 = x15 + 1.13107d0
      x45 = x4 + 1.07811815828004d0*x6 + 13.0045d0
      x46 = 1d0/x45
      x47 = x10 + 0.0047584d0
      x48 = x47**2
      x49 = x46*x48
      x50 = x43*(0.000414033794282063d0*log(x49) + log(x4*x46) + 0.31770
     &8004743941d0 *atan(7.1231089178181177d0/x44))
      x51 = x42*x50
      x52 = x27 - x28*x40 + x41*x51
      x53 = 4.0d0*x28
      x54 = x29**3
      x55 = x36*x37
      x56 = x54*x55
      x57 = x53*x56
      x58 = x34**0.333333333333333d0
      x59 = x32**0.333333333333333d0
      x60 = (2.56488140124205d0*x31 - 2.56488140124205d0)*(x58 - x59)
      x61 = x1**(-5)
      x62 = x38*x61
      x63 = x28*x62
      x64 = x60*x63
      x65 = x31 - 1.0d0
      x66 = x50*x65
      x67 = 0.38988157484231d0*x56
      x68 = x66*x67
      x69 = x30*x51*x60
      x70 = 0.0974703937105774d0*x69
      x71 = x1**(-1.16666666666667d0)*x5
      x72 = x21**(-2)
      x73 = 37.8469910464d0*x72 + 1.0d0
      x74 = 1d0/x73
      x75 = x72*x74
      x76 = x71*x75
      x77 = 0.0758081683534927d0*x76
      x78 = -x77
      x79 = 1d0/x23
      x80 = 0.000307885761673592d0*x71
      x81 = x1**(-1.33333333333333d0)
      x82 = 0.30285343213869d0*x81
      x83 = x0*x82
      x84 = 0.592156210181417d0*x71 + x83
      x85 = x19*x84
      x86 = x23*x85
      x87 = 0.000969022771154437d0*x86
      x88 = x3*x85
      x89 = x82 - x88
      x90 = 0.0342197431724027d0*x2
      x91 = x16**(-2)
      x92 = 22.3816694236d0*x91 + 1.0d0
      x93 = 1d0/x92
      x94 = x91*x93
      x95 = 0.0789023540332771d0*x71*x94
      x96 = -x82
      x97 = x88 + x96
      x98 = x90*x97
      x99 = 1.12164690766024d0*x71 + x83
      x100 = x8*x99
      x101 = x100*x3 + x96
      x102 = 0.0171098715862014d0*x2
      x103 = x101*x102
      x104 = x79*(-x80 + x87)
      x105 = 1d0/x11
      x106 = 0.000714210536071954d0*x71
      x107 = x100*x11
      x108 = x105*(-x106 + 0.00224786709554261d0*x107)
      x109 = x40*(-x103 + x104 - x108 + x77 - x95 + x98)
      x110 = x36*x61
      x111 = x110*x38
      x112 = x41*x43
      x113 = x44**(-2)
      x114 = 50.7386806551d0*x113 + 1.0d0
      x115 = 1d0/x114
      x116 = x113*x115
      x117 = 0.719040519881222d0*x116*x71
      x118 = 0.179686359713341d0*x71 + x83
      x119 = x118*x46
      x120 = x119*x3
      x121 = 1.10064241629821d0*x2
      x122 = 1d0/x47
      x123 = 0.000131550169826529d0*x71
      x124 = x119*x47
      x125 = 0.000414033794282063d0*x124
      x126 = x42*(x117 - x121*(-x120 + x82) - x122*(x123 - x125))
      x127 = x109 - x111*x53 - x112*x126 + x78 + x79*(x80 - x87) + x89*x
     &90
      x128 = x32*x58
      x129 = x128 - x33
      x130 = 2.56488140124205d0*x129
      x131 = x130*x63
      x132 = 0.25d0*x30
      x133 = x129*x132
      x134 = x133*x51
      x135 = x32*x50
      x136 = x135*x67
      x137 = 5.1297628024841d0*x59
      x138 = 0.854960467080683d0*x34**(-0.666666666666667d0)
      x139 = x137*x65 + x138*x65**2 + 0.854960467080683d0*x32**(-0.66666
     &6666666667d0) *x34**2 + 5.1297628024841d0*x35
      x140 = x14 + x17 - x20 - x22 - x26 + x9
      x141 = x140*x38/x1**6
      x142 = x103 - x104 + x108 + x78 + x95 - x98
      x143 = 8.0d0*x142
      x144 = x143*x56
      x145 = x140*x54
      x146 = 32.0d0*x110*x145
      x147 = x34*x59
      x148 = x147 + x58*x65
      x149 = 20.5190512099364d0*x148
      x150 = x142*x62
      x151 = x148*x150
      x152 = x145*x61
      x153 = 0.5d0*x30
      x154 = 1.0d0 - x39
      x155 = x120 + x96
      x156 = x121*x155
      x157 = x43*(x117 + x122*(-x123 + x125) + x156)
      x158 = x154*x157
      x159 = x148*x158
      x160 = x1**(-2)
      x161 = 0.0974703937105774d0*x154*x160*x50
      x162 = x148*x54*x61
      x163 = 8.0d0*x31
      x164 = x29**2
      x165 = 5.0d0*x160*x164
      x166 = -x165
      x167 = x164*x55
      x168 = 0.38988157484231d0*x167*x50
      x169 = 0.77976314968462d0*x56
      x170 = x157*x65
      x171 = 12.0d0*x140*x167
      x172 = 1d0/x12
      x173 = x0*x1**(-2.33333333333333d0)
      x174 = x1**(-2.16666666666667d0)*x5
      x175 = 0.40380457618492d0*x1**(-2.33333333333333d0)
      x176 = x0*x175
      x177 = 1.30858805893694d0*x174 + x176
      x178 = 0.60570686427738d0*x81
      x179 = x0*x178
      x180 = x99*(x179 + 2.24329381532048d0*x71)/x7**2
      x181 = x1**(-0.666666666666667d0)
      x182 = -0.317728097665645d0*x71
      x183 = x107 + x182
      x184 = 1d0/x24
      x185 = 0.69084891187832d0*x174 + x176
      x186 = 0.000615771523347183d0*x71
      x187 = x84*(x179 + 1.18431242036283d0*x71)/x18**2
      x188 = x182 + x86
      x189 = -0.0481727702369445d0*x173*x74/x21**3 + 1.82319440383792d0*
     &x173/(x21**5* x73**2) + 0.0884428630790749d0*x174*x75 - 0.01140658
     &10574676d0* x181*x97 - x184*x188*x80 - x184*(4.89119786774443d-5*x
     &173 + 0.000359200055285857d0*x174*x23 - 0.000969022771154437d0*x18
     &5*x25 - x186*x86 + 0.000969022771154437d0*x187*x24) + 0.0009690227
     &71154437d0*x188*x79*x85 + x85*x98 - x90*(x175 - x178* x85 - x185*x
     &19*x3 + x187*x3)
      x190 = 1d0/x48
      x191 = x124 + x182
      x192 = 0.209634086332231d0*x174 + x176
      x193 = x118*(x179 + 0.359372719426682d0*x71)/x45**2
      x194 = x111*x143 + x112*x154*(0.456918753052755d0*x115*x173/x44**3
     & - 0.838880606528093d0*x116*x174 - 0.000414033794282063d0*x119*x12
     &2* x191 - x119*x156 + x121*(-x119*x178 + x175 - x192*x3*x46 + x193
     &* x3) + x123*x190*x191 + 0.366880805432736d0*x155*x181 + x190*( -0
     &.000263100339653058d0*x124*x71 + 2.08985926032878d-5*x173 + 0.0001
     &53475198130951d0*x174*x47 - 0.000414033794282063d0*x192*x49 + 0.00
     &0414033794282063d0*x193*x48) - 23.1834546964702d0*x173/( x114**2*x
     &44**5)) - 20.0d0*x141*x36 + x189 - x40*(-x100*x103 - 0.00224786709
     &554261d0*x100*x105*x183 + 0.00570329052873379d0*x101 *x181 + x102*
     &(-x100*x178 + x175 - x177*x3*x8 + x180*x3) + x106* x172*x183 + x17
     &2*(-0.00142842107214391d0*x107*x71 + 0.000833245625417279d0*x11*x1
     &74 + 0.00224786709554261d0*x12*x180 - 0.00224786709554261d0*x13*x1
     &77 + 0.000113462377479451d0*x173) - 0.0920527463721566d0*x174*x94 
     &+ x189 + 0.0501389896966688d0*x173* x93/x16**3 - 1.12219429262413d
     &0*x173/(x16**5*x92**2))
      x195 = -x171 + x194
      x196 = 8.0d0*x28
      x197 = x196*x56
      x198 = -2.0d0*x109 + x111*x196 + 0.194940787421155d0*x126*x36*x43 
     &- 0.0684394863448054d0*x2*x89 + 0.151616336706985d0*x76 - x79*(x18
     &6 - 0.00193804554230887d0*x86)
      x199 = x137*x31 + x138*x32*x65 - 0.854960467080683d0*x147 - 5.1297
     &628024841d0* x31*x58
      x200 = 10.2595256049682d0*x141
      x201 = 10.2595256049682d0*x152
      x202 = x129*x54*x61
      x203 = x157*x32
      x204 = -5.1297628024841d0*x128 + x138*x32**2 + 5.98472326956478d0*
     &x33
      x205 = 20.5190512099364d0*x129
      x206 = 5.1297628024841d0*x129
      x207 = x129*x153
      E = x52
      d1E(1) = -x1*(x127 + x57 + x64 + x68 - x70) + x52
      d1E(2) = -x1*(x127 + x131 - x134 + x136 - x57) + x52
      d2E(1) = -x1*(-x139*x141 + x139*x161 + x141*x149 - x144 + x146 - x
     &149*x152 - 5.1297628024841d0*x151 + x153*x159 + 2.0d0*x162*x66 + x
     &168*(x163 + x166 - 3.0d0) + x169*x170 + x195) - x169*x66 - x197 + 
     &x198 - 2.0d0*x64 + 0.194940787421155d0*x69
      d2E(2) = -x1*(x129*x200 - x129*x201 - x130*x150 + x132*x159 + x133
     &*x158 + 1.0d0* x135*x162 - x141*x199 + x148*x200 + x148*x201 - 2.5
     &6488140124205d0*x151 + x161*x199 + x168*(x166 + 3.0d0) + x170* x67
     & + x171 + x194 + 1.0d0*x202*x66 + x203*x67) - x131 + x134 - x136 +
     & x198 - x64 - x68 + x70
      d2E(3) = -x1*(2.0d0*x135*x202 - x141*x204 + x141*x205 + x144 - x14
     &6 - x150*x206 + x152*x205 + x158*x207 + x161*x204 - x168*(x163 + x
     &165 + 3.0d0) + x169*x203 + x195) - x135*x169 + x197 + x198 - x206*
     &x63 + x207*x51
      end subroutine
